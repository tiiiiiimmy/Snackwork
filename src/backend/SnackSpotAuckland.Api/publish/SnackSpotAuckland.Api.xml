<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SnackSpotAuckland.Api</name>
    </assembly>
    <members>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.AuthController.Register(SnackSpotAuckland.Api.Services.RegisterDto)">
            <summary>
            Register a new user account
            </summary>
            <param name="registerDto">Registration details</param>
            <returns>Authentication result with access token</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.AuthController.Login(SnackSpotAuckland.Api.Services.LoginDto)">
            <summary>
            Authenticate user and get access token
            </summary>
            <param name="loginDto">Login credentials</param>
            <returns>Authentication result with access token</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.AuthController.RefreshToken">
            <summary>
            Refresh access token using refresh token from httpOnly cookie
            </summary>
            <returns>New access token</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.AuthController.Logout">
            <summary>
            Logout and revoke refresh token
            </summary>
            <returns>Success message</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.AuthController.GetProfile">
            <summary>
            Get current user profile (requires authentication)
            </summary>
            <returns>Current user profile</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.AuthController.LogoutAll">
            <summary>
            Revoke all refresh tokens for current user (logout from all devices)
            </summary>
            <returns>Success message</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.CategoriesController.GetCategories">
            <summary>
            Get all categories
            </summary>
            <returns>List of all categories</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.CategoriesController.GetCategory(System.Guid)">
            <summary>
            Get a specific category by ID
            </summary>
            <param name="id">Category ID</param>
            <returns>Category details</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.CategoriesController.CreateCategory(SnackSpotAuckland.Api.Models.Category)">
            <summary>
            Create a new category (requires Level 2+)
            </summary>
            <param name="category">Category to create</param>
            <returns>Created category</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.ReviewsController.CreateReview(SnackSpotAuckland.Api.Controllers.V1.CreateReviewDto)">
            <summary>
            Submit a rating and review for a snack
            </summary>
            <param name="reviewDto">Review data</param>
            <returns>Created review</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.ReviewsController.GetReview(System.Guid)">
            <summary>
            Get a specific review by ID
            </summary>
            <param name="id">Review ID</param>
            <returns>Review details</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.ReviewsController.GetReviewsBySnack(System.Guid)">
            <summary>
            Get reviews for a specific snack
            </summary>
            <param name="snackId">Snack ID</param>
            <returns>List of reviews for the snack</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.ReviewsController.UpdateReview(System.Guid,SnackSpotAuckland.Api.Controllers.V1.CreateReviewDto)">
            <summary>
            Update a review (only by owner)
            </summary>
            <param name="id">Review ID</param>
            <param name="reviewDto">Updated review data</param>
            <returns>Updated review</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.ReviewsController.DeleteReview(System.Guid)">
            <summary>
            Delete a review (only by owner)
            </summary>
            <param name="id">Review ID</param>
            <returns>No content</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.UsersController.GetUser(System.Guid)">
            <summary>
            Get user profile and badges
            </summary>
            <param name="id">User ID</param>
            <returns>User profile with statistics and badges</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.UsersController.GetCurrentUser">
            <summary>
            Get current user profile (requires authentication)
            </summary>
            <returns>Current user profile</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.UsersController.GetUserSnacks(System.Guid)">
            <summary>
            Get user's snacks
            </summary>
            <param name="id">User ID</param>
            <returns>List of snacks created by the user</returns>
        </member>
        <member name="M:SnackSpotAuckland.Api.Controllers.V1.UsersController.GetUserReviews(System.Guid)">
            <summary>
            Get user's reviews
            </summary>
            <param name="id">User ID</param>
            <returns>List of reviews created by the user</returns>
        </member>
        <member name="T:SnackSpotAuckland.Api.Migrations.InitialAzureMigration">
            <inheritdoc />
        </member>
        <member name="M:SnackSpotAuckland.Api.Migrations.InitialAzureMigration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:SnackSpotAuckland.Api.Migrations.InitialAzureMigration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:SnackSpotAuckland.Api.Migrations.InitialAzureMigration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
